@font-face {
  font-family: Metropolis;
  font-weight: 400;
  src: local("Metropolis Regular"), local("Metropolis-Regular"), url(/static/fonts/Metropolis-Regular.woff2);
}

@font-face {
  font-family: Metropolis;
  font-weight: 700;
  src: local("Metropolis Bold"), local("Metropolis-Bold"), url(/static/fonts/Metropolis-Bold.woff2);
}

@font-face {
  font-family: Metropolis;
  font-style: italic;
  font-weight: 400;
  src: local("Metropolis RegularItalic"), local("Metropolis-RegularItalic"), url(/static/fonts/Metropolis-RegularItalic.woff2);
}

@font-face {
  font-family: Inconsolata;
  font-weight: 400;
  src: local("Inconsolata"), url(/static/fonts/Inconsolata-Regular.woff2);
}

@font-face {
  font-family: Inconsolata;
  font-weight: 700;
  src: local("Inconsolata Bold"), url(/static/fonts/Inconsolata-Bold.woff2);
}

:root {
  --darker-black: #222;
  --black: #333;
  --lighter-black: #444;
  --grey: #f2f2f1;
  --red: #e8403a;
  --white: #fff;
}

body {
  color: var(--black);
  font-family: Metropolis;
}

.rst-content .toctree-wrapper > p.caption, h1, h2, h3, h4, h5, h6, legend {
  font-family: Inconsolata;
}

.rst-content h2 {
  margin-top: 1.75em;
}

.rst-content .linenodiv pre, .rst-content div[class^=highlight] pre, .rst-content pre.literal-block {
  font-family: Inconsolata;
  font-size: 1em;
}

.rst-content code, .rst-content tt {
  border: none;
  font-family: Inconsolata;
  font-size: 1em;
  padding: 0;
}

.rst-content code.literal, .rst-content tt.literal {
  background: transparent;
  color: inherit;
}

.wy-side-nav-search {
  background-color: var(--red);
}

.wy-side-nav-search .version {
  display: none;
}

.wy-menu-vertical header, .wy-menu-vertical p.caption {
  color: var(--red);
}

.wy-nav-content {
  background: var(--white);
}

.wy-nav-content a, .wy-nav-content a:visited {
  color: var(--red);
}

.wy-nav-content a:hover {
  color: var(--red);
  text-decoration: underline;
}

.wy-side-nav-search input[type=text] {
  border: 1px solid var(--grey);
  border-radius: 0;
}

.wy-nav-side {
  background: var(--grey);
}

.wy-menu-vertical a {
  color: inherit;
}

.wy-menu-vertical a:hover {
  background: var(--white);
}

.wy-nav-content-wrap {
  background: var(--grey);
}

.wy-side-nav-search > div.version {
  color: var(--white);
}

.wy-nav-top {
  background: var(--red);
}

#versions {
  background: var(--red);
  position: absolute;
  bottom: 0;
  left: 0;
  width: 300px;
}

#versions li {
  display: none;
  line-height: 2;
  text-align: center;
}

#versions:hover li, #versions li.current {
  display: block;
}

#versions a {
  color: var(--white);
}

#versions:hover li.current a {
  text-decoration: underline;
}

@media (prefers-color-scheme: dark) {
  body {
    color: var(--white);
  }

  .wy-nav-content {
    background: var(--black);
  }

  .wy-nav-content-wrap {
    background: var(--darker-black);
  }

  .wy-nav-side {
    background: var(--darker-black);
  }

  .wy-menu-vertical a:hover {
    background: var(--black);
  }

  .wy-menu-vertical li.current {
    background: var(--black);
  }

  .wy-menu-vertical li.toctree-l2 a {
    border-color: var(--lighter-black);
    color: var(--white);
  }

  .wy-menu-vertical li[class^=toctree].current > a,
  .wy-menu-vertical li[class^=toctree].current li[class^=toctree].current > a {
    background: var(--darker-black);
    border-color: var(--lighter-black);
    color: var(--white);
  }

  .wy-menu-vertical li[class^=toctree].current li[class^=toctree]:not(.current) > a {
    background: transparent;
  }

  .wy-menu-vertical li[class^=toctree] > a:hover,
  .wy-menu-vertical li[class^=toctree].current li[class^=toctree] > a:hover {
    background: var(--lighter-black);
  }

  .wy-menu-vertical li.current > a span.toctree-expand {
    color: inherit;
  }
}
