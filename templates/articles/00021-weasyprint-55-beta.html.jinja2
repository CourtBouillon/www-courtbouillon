{% extends '_layout.jinja2' %}

{% block content %}

  <article>
    <header>
      <h2>WeasyPrint v55: Beta Time</h2>
      <aside><time datetime="2022-04-15">April 15, 2022</time>, by grewn0uille</aside>
      <p>
        WeasyPrint v55 is the next major version of WeasyPrint.
        We released a <a href="">beta</a> so you can give it a try and help us to have a nice stable major release!
        For this version, the main focus was performance improvement.
        Let‚Äôs see what we got in this version!
      </p>
    </header>

    <section>
      <h3>Better performance</h3>

      <p>
        The main goal of this version is to improve WeasyPrint performance üå±.
      </p>
      <p>
        For that, changes have been done in WeasyPrint on fonts management and column layout,
        and also in cssselect2.
      </p>

      <h4>Fonts</h4>
      <p>
        When a font is include into the PDF, only the needed informations about the font
        are kept, which means font objects are now smaller.
      </p>
      <p>
        Many work for fonts is done with Harfbuzz and Pango libraries. Calls to these librairies
        have been reduced, which makes font treatment faster. This improvement is particulary
        useful for large document using always using a same <code>@font-face</code>.
      </p>
      <p>
        Another improvement for font is with the <code>ch</code> and <code>ex</code> units.
        A cache is now used to store ch and ex ratios. With this enhancement, font management
        of large documents using these units becomes faster.
      </p>

      <h4>Column layout</h4>
      <p>
        The column layout algorithm has been changed ü§ì.
      </p>
      <p>
        Before, this algorithm was rendering column‚Äôs content regardless of the free height remaining
        on a page, and tried to find a nice height steps by steps.
      </p>
      <p>
        Now, the column layout algorithm takes into account the current height remaining on a page.
      </p>
      <p>
        With this change, column layout is faster.
      </p>

      <h4>cssselect2</h4>
      <p>
        The main change in cssselect2 <a href="">new version</a> is how ancestors are calculated
        for each HTML element üßì.
      </p>
      <p>
        When a CSS selector composed with a space is encounter on an HTML element, we need
        to get all its ancestors. Before we used to reparse all the tree to get all of them.
        Now, the ancestors of an element is directly store in an attribute when created
        and so we avoid useless calculation.
      </p>


      <h4>Performance graphs</h4>
      <p>
        To illustrate these performance improvement, let‚Äôs have a look at the following graphs
        (everybody likes graphs üìä, no?).
      </p>
      <p>
        You can find the documents used for these in the <a href="https://github.com/Kozea/WeasyPerf">WeasyPerf repository</a>.
      </p>
      <figure>
        <img src="{{ url_for('static', filename='images/00021-columns.png') }}" alt="Graphs performances with columns layout" title="Graphs performances with columns layout" />
        <figcaption>
          Memory and time used for the PDF generation and PDF size comparison
          between WeasyPrint v54.3 and v55 beta on a <a href="">columns layout document</a>.
        </figcaption>
      </figure>
      <figure>
        <img src="{{ url_for('static', filename='images/00021-fonts.png') }}" alt="Graphs performances with many fonts" title="Graphs performances with many fonts" />
        <figcaption>
          Memory and time used for the PDF generation and PDF size comparison
          between WeasyPrint v54.3 and v55 beta on a <a href="">document using many fonts</a>.
        </figcaption>
      </figure>
      <figure>
        <img src="{{ url_for('static', filename='images/00021-large-doc.png') }}" alt="Graphs performances with large document" title="Graphs performances with large document" />
        <figcaption>
          Memory and time used for the PDF generation and PDF size comparison
          between WeasyPrint v54.3 and v55 beta on a <a href="https://github.com/Kozea/WeasyPerf/tree/master/samples/doc">large document</a>.
        </figcaption>
      </figure>

      <p>
        Depending the documents, memory and time used during the PDF generation have been improved, as the size of the generated PDF.
      </p>
      <p>
        PDF generation uses between ~8% to ~15‚Ä∞ less memory and is between ~18% to ~75% faster.
      </p>
      <p>
        The size of the PDF produced is now ~4‚Ä∞ to ~21% smaller.
      </p>

      <p>
        These results are nice to have an indication on how the different improvements
        are efficient. But to have the results according to your documents, trying the
        beta is the best üòâ!
      </p>
    </section>

    <section>
      <h3>And More‚Ä¶</h3>

      <p>
        Besides performance improvements, new features and bug fixes come in this version üéâ!
      </p>
      <ul>
        <li>
          <code>break-before</code>, <code>break-inside</code> and <code>break-after</code> properties
          <a href="https://github.com/Kozea/WeasyPrint/issues/489">supports <code>column</code> and <code>avoid-column</code> values</a>.
          This means you can now prevent or force break before, inside or after column!
        </li>
        <li>
          Value <code>inherit</code> is now <a href="https://github.com/Kozea/WeasyPrint/pull/1524">supported for shorthand properties</a>.
          For example, <code>text-decoration: inherit</code> sets <code>text-decoration-color</code>,
          <code>text-decoration-line</code> and <code>text-decoration-style</code> to <code>inherit</code>.
        </li>
        <li>
          Speaking about <code>text-decoration</code>, <a href="https://github.com/Kozea/WeasyPrint/issues/1621">multiple value
          are now applied more correctly</a> than it used to be!
        </li>
        <li>
          Various issues with columns have been fixed, like
          <a href="https://github.com/Kozea/WeasyPrint/issues/1604">page duplication</a> and
          <a href="https://github.com/Kozea/WeasyPrint/issues/1020">infinite loops</a>.
        </li>
        <li>
          And also, SVG and column layouts got more tests!
        </li>
      </ul>


      <p>
        Thanks a lot to
        <a href="https://github.com/Kozea/WeasyPrint/graphs/contributors">our wonderful contributors</a>
        for their hard work on this release, performance improvement can be tricky‚ÄØüíú.
      </p>
    </section>

    <section>
      <h3>What Are the Next Steps?</h3>

      <p>
        The next step is for you! Don‚Äôt hesitate to try this beta and report bugs you
        may found üêû!
      </p>
      <p>
        The next one is to fix the bugs reported and release a nice WeasyPrint v55.
      </p>
      <p>
        Have fun with this <a href="">beta</a> üíú.
      </p>
    </section>

  </article>

{% endblock content %}
